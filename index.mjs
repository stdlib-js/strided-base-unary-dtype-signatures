// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-safe-casts@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/strided-base-dtype-resolve-enum@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/strided-base-dtype-resolve-str@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.0.2-esm/index.mjs";function n(e,r){var t,s,n,o,i,d,l;for(s=e.length,n=r.length,t=[],l=0,i=0;i<s&&!(l>=n);i++)for(o=e[i],d=l;d<n;d++)if(o===r[d]){l=d+1,t.push(o);break}return t}function o(e){var r,n,o;for(r=[],o=0;o<e.length;o++){if(null===(n=t(e[o])))return new TypeError(s("invalid argument. Must provide recognized data types. Unable to resolve a data type string. Value: `%s`.",e[o]));r.push(n)}return r}function i(t,s,i){var d,l,f,a,h,m,p,u,g,v;if(l=arguments.length>2?i:{},(h=o(t))instanceof Error)throw h;if(s===t)m=h;else if((m=o(s))instanceof Error)throw m;for(m.sort(),u=h.length,a=[],g=0;g<u;g++)if(p=h[g],null!==(d=e(p)))for(d=n(m,d.sort()),v=0;v<d.length;v++)a.push(p,d[v]);if(l.enums){for(f=[],g=0;g<a.length;g++)f.push(r(a[g]));a=f}return a}export{i as default};
//# sourceMappingURL=index.mjs.map
